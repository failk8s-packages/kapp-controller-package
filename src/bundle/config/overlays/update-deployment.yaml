#@ load("@ytt:overlay", "overlay")
#@ load("values.star", "values")
#@ load("@ytt:yaml", "yaml")

#@ def generateBashCmdForDNS(coreDNSIP):
#@    # This command added the coreDNS IP as the first entry of resolv.conf
#@    # In this way, Kapp Controller will have cluster IP access,
#@    # and still able to resolve enternal urls when core DNS is unavailable
#@
#@    return "cp /etc/resolv.conf /etc/resolv.conf.bak; sed '1 i nameserver " + coreDNSIP + "' /etc/resolv.conf.bak > /etc/resolv.conf; rm /etc/resolv.conf.bak; cp -R /etc/* /kapp-etc; chmod g+w /kapp-etc/pki/tls/certs/ca-bundle.crt"
#@ end

#@overlay/match by=overlay.subset({"kind":"Deployment","metadata":{"name": "kapp-controller"}})
---
metadata:
  annotations:
    #@overlay/match missing_ok=True
    kapp.k14s.io/change-rule: "upsert after upserting apps.kappctrl.k14s.io/kapp-controller-config"
spec:
  template:
    #@overlay/match-child-defaults missing_ok=True
    spec:
      containers:
        #@overlay/match by=overlay.subset({"name":"kapp-controller"})
        - args:
            #@overlay/match by=overlay.subset("-packaging-global-namespace=kapp-controller-packaging-global")
            -  #@ "-packaging-global-namespace={}".format(values.kappController.globalNamespace)
            #@overlay/append
            -  #@ "-concurrency={}".format(values.kappController.deployment.concurrency)
            #@overlay/append
            -  #@ "-metrics-bind-address={}".format(values.kappController.deployment.metricsBindAddress)
          ports:
            #@overlay/match by="name"
            - name: api
              containerPort: #@ values.kappController.deployment.apiPort
          env:
            #@overlay/match by="name"
            - name: KAPPCTRL_API_PORT
              value: #@ str(values.kappController.deployment.apiPort)
          #@ if values.kappController.deployment.coreDNSIP:
          volumeMounts:
            - mountPath: /etc
              name: etc
          #@ end
      #@ if values.kappController.deployment.coreDNSIP:
      #! Using init container bypasses the restriction of not having root access in main container
      #! It modifies /etc/resolv.conf which is shared to main container
      initContainers:
        - args:
            - -c
            -  #@ generateBashCmdForDNS(values.kappController.deployment.coreDNSIP)
          command:
            - /bin/sh
          #! Beware, update this image with each version bump!!!!!!!
          #! This image needs to be the same as the image used in basefile
          image: ghcr.io/vmware-tanzu/carvel-kapp-controller@sha256:e8547348b57d10da98051d330386cfd961959ac82def18832eefce87da1ca661
          name: init-kapp-controller
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          volumeMounts:
            - mountPath: /kapp-etc
              name: etc
      #@ end
      #@ if/end values.kappController.deployment.hostNetwork:
      hostNetwork: #@ values.kappController.deployment.hostNetwork
      #@ if/end values.kappController.deployment.priorityClassName:
      priorityClassName: #@ values.kappController.deployment.priorityClassName
      #@ if hasattr(values.kappController.deployment, 'tolerations') and values.kappController.deployment.tolerations:
      tolerations: #@ values.kappController.deployment.tolerations
      #@ end
      #@ if values.kappController.deployment.coreDNSIP:
      volumes:
        #@overlay/append
        - emptyDir:
            medium: Memory
          name: etc
      #@ end
